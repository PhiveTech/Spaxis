// Generated by CoffeeScript 1.7.1
(function() {
  var Game;

  Game = require('./game.coffee');

  module.exports = function(io) {
    var games, openGame;
    games = {};
    openGame = new Game();
    games[openGame.state.id] = openGame;
    return io.on('connection', function(socket) {
      var currentGame;
      currentGame = null;
      socket.on('joinPublic', function(name) {
        currentGame = openGame;
        currentGame.addPlayer(socket.id, name);
        return socket.emit('joinedPublic', currentGame.state.id);
      });
      socket.on('observe', function(gameId) {
        currentGame = games[gameId];
        return currentGame != null ? currentGame.subscribe(socket.id, function(state) {
          return socket.emit('update', state);
        }) : void 0;
      });
      socket.on('start', function() {
        if (currentGame != null ? currentGame.getPlayer(socket.id) : void 0) {
          currentGame.start();
          if (currentGame === openGame) {
            openGame = new Game();
            return games[openGame.state.id] = openGame;
          }
        }
      });
      socket.on('leave', function() {
        if (currentGame) {
          currentGame.removePlayer(socket.id);
          return currentGame.unsubscribe(socket.id);
        }
      });
      return socket.on('disconnect', function() {
        if (currentGame) {
          currentGame.removePlayer(socket.id);
          return currentGame.unsubscribe(socket.id);
        }
      });
    });
  };

}).call(this);
